// Package models provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package admin

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyAuthScopes = "apiKeyAuth.Scopes"
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for AdminUserRole.
const (
	AdminUserRoleAdmin     AdminUserRole = "admin"
	AdminUserRoleEditor    AdminUserRole = "editor"
	AdminUserRoleModerator AdminUserRole = "moderator"
	AdminUserRoleViewer    AdminUserRole = "viewer"
)

// Defines values for AdminUserStatus.
const (
	AdminUserStatusActive    AdminUserStatus = "active"
	AdminUserStatusInactive  AdminUserStatus = "inactive"
	AdminUserStatusSuspended AdminUserStatus = "suspended"
)

// Defines values for CreateAdminUserRequestRole.
const (
	CreateAdminUserRequestRoleAdmin     CreateAdminUserRequestRole = "admin"
	CreateAdminUserRequestRoleEditor    CreateAdminUserRequestRole = "editor"
	CreateAdminUserRequestRoleModerator CreateAdminUserRequestRole = "moderator"
	CreateAdminUserRequestRoleViewer    CreateAdminUserRequestRole = "viewer"
)

// Defines values for CreateEventRequestEventType.
const (
	CreateEventRequestEventTypeCommunity   CreateEventRequestEventType = "community"
	CreateEventRequestEventTypeConference  CreateEventRequestEventType = "conference"
	CreateEventRequestEventTypeFundraising CreateEventRequestEventType = "fundraising"
	CreateEventRequestEventTypeNetworking  CreateEventRequestEventType = "networking"
	CreateEventRequestEventTypeSeminar     CreateEventRequestEventType = "seminar"
	CreateEventRequestEventTypeTraining    CreateEventRequestEventType = "training"
	CreateEventRequestEventTypeWebinar     CreateEventRequestEventType = "webinar"
	CreateEventRequestEventTypeWorkshop    CreateEventRequestEventType = "workshop"
)

// Defines values for CreateNewsArticleRequestNewsType.
const (
	CreateNewsArticleRequestNewsTypeAlert        CreateNewsArticleRequestNewsType = "alert"
	CreateNewsArticleRequestNewsTypeAnnouncement CreateNewsArticleRequestNewsType = "announcement"
	CreateNewsArticleRequestNewsTypeEvent        CreateNewsArticleRequestNewsType = "event"
	CreateNewsArticleRequestNewsTypeFeature      CreateNewsArticleRequestNewsType = "feature"
	CreateNewsArticleRequestNewsTypePressRelease CreateNewsArticleRequestNewsType = "press_release"
	CreateNewsArticleRequestNewsTypeUpdate       CreateNewsArticleRequestNewsType = "update"
)

// Defines values for CreateNewsArticleRequestPriorityLevel.
const (
	CreateNewsArticleRequestPriorityLevelHigh   CreateNewsArticleRequestPriorityLevel = "high"
	CreateNewsArticleRequestPriorityLevelLow    CreateNewsArticleRequestPriorityLevel = "low"
	CreateNewsArticleRequestPriorityLevelNormal CreateNewsArticleRequestPriorityLevel = "normal"
	CreateNewsArticleRequestPriorityLevelUrgent CreateNewsArticleRequestPriorityLevel = "urgent"
)

// Defines values for CreateNewsArticleRequestPublishingStatus.
const (
	CreateNewsArticleRequestPublishingStatusArchived  CreateNewsArticleRequestPublishingStatus = "archived"
	CreateNewsArticleRequestPublishingStatusDraft     CreateNewsArticleRequestPublishingStatus = "draft"
	CreateNewsArticleRequestPublishingStatusPublished CreateNewsArticleRequestPublishingStatus = "published"
)

// Defines values for CreateResearchPublicationRequestResearchType.
const (
	CreateResearchPublicationRequestResearchTypeCaseStudy          CreateResearchPublicationRequestResearchType = "case_study"
	CreateResearchPublicationRequestResearchTypeClinicalStudy      CreateResearchPublicationRequestResearchType = "clinical_study"
	CreateResearchPublicationRequestResearchTypeGuideline          CreateResearchPublicationRequestResearchType = "guideline"
	CreateResearchPublicationRequestResearchTypeMetaAnalysis       CreateResearchPublicationRequestResearchType = "meta_analysis"
	CreateResearchPublicationRequestResearchTypeObservationalStudy CreateResearchPublicationRequestResearchType = "observational_study"
	CreateResearchPublicationRequestResearchTypeReview             CreateResearchPublicationRequestResearchType = "review"
	CreateResearchPublicationRequestResearchTypeWhitePaper         CreateResearchPublicationRequestResearchType = "white_paper"
)

// Defines values for CreateResearchPublicationRequestStudyStatus.
const (
	CreateResearchPublicationRequestStudyStatusArchived  CreateResearchPublicationRequestStudyStatus = "archived"
	CreateResearchPublicationRequestStudyStatusCompleted CreateResearchPublicationRequestStudyStatus = "completed"
	CreateResearchPublicationRequestStudyStatusOngoing   CreateResearchPublicationRequestStudyStatus = "ongoing"
	CreateResearchPublicationRequestStudyStatusPlanned   CreateResearchPublicationRequestStudyStatus = "planned"
	CreateResearchPublicationRequestStudyStatusPublished CreateResearchPublicationRequestStudyStatus = "published"
)

// Defines values for CreateServiceRequestAvailabilityStatus.
const (
	CreateServiceRequestAvailabilityStatusAppointmentOnly CreateServiceRequestAvailabilityStatus = "appointment_only"
	CreateServiceRequestAvailabilityStatusAvailable       CreateServiceRequestAvailabilityStatus = "available"
	CreateServiceRequestAvailabilityStatusLimited         CreateServiceRequestAvailabilityStatus = "limited"
	CreateServiceRequestAvailabilityStatusUnavailable     CreateServiceRequestAvailabilityStatus = "unavailable"
)

// Defines values for CreateServiceRequestServiceType.
const (
	CreateServiceRequestServiceTypeConsultation   CreateServiceRequestServiceType = "consultation"
	CreateServiceRequestServiceTypeDiagnostic     CreateServiceRequestServiceType = "diagnostic"
	CreateServiceRequestServiceTypePrevention     CreateServiceRequestServiceType = "prevention"
	CreateServiceRequestServiceTypeProcedure      CreateServiceRequestServiceType = "procedure"
	CreateServiceRequestServiceTypeRehabilitation CreateServiceRequestServiceType = "rehabilitation"
	CreateServiceRequestServiceTypeTherapy        CreateServiceRequestServiceType = "therapy"
	CreateServiceRequestServiceTypeTreatment      CreateServiceRequestServiceType = "treatment"
)

// Defines values for EventEventType.
const (
	EventEventTypeCommunity   EventEventType = "community"
	EventEventTypeConference  EventEventType = "conference"
	EventEventTypeFundraising EventEventType = "fundraising"
	EventEventTypeNetworking  EventEventType = "networking"
	EventEventTypeSeminar     EventEventType = "seminar"
	EventEventTypeTraining    EventEventType = "training"
	EventEventTypeWebinar     EventEventType = "webinar"
	EventEventTypeWorkshop    EventEventType = "workshop"
)

// Defines values for EventPublishingStatus.
const (
	EventPublishingStatusArchived  EventPublishingStatus = "archived"
	EventPublishingStatusCancelled EventPublishingStatus = "cancelled"
	EventPublishingStatusDraft     EventPublishingStatus = "draft"
	EventPublishingStatusPublished EventPublishingStatus = "published"
)

// Defines values for EventRegistrationStatus.
const (
	EventRegistrationStatusCancelled EventRegistrationStatus = "cancelled"
	EventRegistrationStatusClosed    EventRegistrationStatus = "closed"
	EventRegistrationStatusFull      EventRegistrationStatus = "full"
	EventRegistrationStatusOpen      EventRegistrationStatus = "open"
)

// Defines values for InquiryInquiryType.
const (
	InquiryInquiryTypeBusiness  InquiryInquiryType = "business"
	InquiryInquiryTypeDonation  InquiryInquiryType = "donation"
	InquiryInquiryTypeMedia     InquiryInquiryType = "media"
	InquiryInquiryTypeVolunteer InquiryInquiryType = "volunteer"
)

// Defines values for InquiryStatus.
const (
	InquiryStatusClosed     InquiryStatus = "closed"
	InquiryStatusCompleted  InquiryStatus = "completed"
	InquiryStatusInProgress InquiryStatus = "in_progress"
	InquiryStatusPending    InquiryStatus = "pending"
)

// Defines values for NewsArticleNewsType.
const (
	NewsArticleNewsTypeAlert        NewsArticleNewsType = "alert"
	NewsArticleNewsTypeAnnouncement NewsArticleNewsType = "announcement"
	NewsArticleNewsTypeEvent        NewsArticleNewsType = "event"
	NewsArticleNewsTypeFeature      NewsArticleNewsType = "feature"
	NewsArticleNewsTypePressRelease NewsArticleNewsType = "press_release"
	NewsArticleNewsTypeUpdate       NewsArticleNewsType = "update"
)

// Defines values for NewsArticlePriorityLevel.
const (
	NewsArticlePriorityLevelHigh   NewsArticlePriorityLevel = "high"
	NewsArticlePriorityLevelLow    NewsArticlePriorityLevel = "low"
	NewsArticlePriorityLevelNormal NewsArticlePriorityLevel = "normal"
	NewsArticlePriorityLevelUrgent NewsArticlePriorityLevel = "urgent"
)

// Defines values for NewsArticlePublishingStatus.
const (
	NewsArticlePublishingStatusArchived  NewsArticlePublishingStatus = "archived"
	NewsArticlePublishingStatusDraft     NewsArticlePublishingStatus = "draft"
	NewsArticlePublishingStatusPublished NewsArticlePublishingStatus = "published"
)

// Defines values for ResearchPublicationPublishingStatus.
const (
	ResearchPublicationPublishingStatusArchived  ResearchPublicationPublishingStatus = "archived"
	ResearchPublicationPublishingStatusDraft     ResearchPublicationPublishingStatus = "draft"
	ResearchPublicationPublishingStatusPublished ResearchPublicationPublishingStatus = "published"
)

// Defines values for ResearchPublicationResearchType.
const (
	ResearchPublicationResearchTypeCaseStudy          ResearchPublicationResearchType = "case_study"
	ResearchPublicationResearchTypeClinicalStudy      ResearchPublicationResearchType = "clinical_study"
	ResearchPublicationResearchTypeGuideline          ResearchPublicationResearchType = "guideline"
	ResearchPublicationResearchTypeMetaAnalysis       ResearchPublicationResearchType = "meta_analysis"
	ResearchPublicationResearchTypeObservationalStudy ResearchPublicationResearchType = "observational_study"
	ResearchPublicationResearchTypeReview             ResearchPublicationResearchType = "review"
	ResearchPublicationResearchTypeWhitePaper         ResearchPublicationResearchType = "white_paper"
)

// Defines values for ResearchPublicationStudyStatus.
const (
	ResearchPublicationStudyStatusArchived  ResearchPublicationStudyStatus = "archived"
	ResearchPublicationStudyStatusCompleted ResearchPublicationStudyStatus = "completed"
	ResearchPublicationStudyStatusOngoing   ResearchPublicationStudyStatus = "ongoing"
	ResearchPublicationStudyStatusPlanned   ResearchPublicationStudyStatus = "planned"
	ResearchPublicationStudyStatusPublished ResearchPublicationStudyStatus = "published"
)

// Defines values for ServiceAvailabilityStatus.
const (
	ServiceAvailabilityStatusAppointmentOnly ServiceAvailabilityStatus = "appointment_only"
	ServiceAvailabilityStatusAvailable       ServiceAvailabilityStatus = "available"
	ServiceAvailabilityStatusLimited         ServiceAvailabilityStatus = "limited"
	ServiceAvailabilityStatusUnavailable     ServiceAvailabilityStatus = "unavailable"
)

// Defines values for ServicePublishingStatus.
const (
	ServicePublishingStatusArchived  ServicePublishingStatus = "archived"
	ServicePublishingStatusDraft     ServicePublishingStatus = "draft"
	ServicePublishingStatusPublished ServicePublishingStatus = "published"
)

// Defines values for ServiceServiceType.
const (
	ServiceServiceTypeConsultation   ServiceServiceType = "consultation"
	ServiceServiceTypeDiagnostic     ServiceServiceType = "diagnostic"
	ServiceServiceTypePrevention     ServiceServiceType = "prevention"
	ServiceServiceTypeProcedure      ServiceServiceType = "procedure"
	ServiceServiceTypeRehabilitation ServiceServiceType = "rehabilitation"
	ServiceServiceTypeTherapy        ServiceServiceType = "therapy"
	ServiceServiceTypeTreatment      ServiceServiceType = "treatment"
)

// Defines values for UpdateAdminUserRequestRole.
const (
	UpdateAdminUserRequestRoleAdmin     UpdateAdminUserRequestRole = "admin"
	UpdateAdminUserRequestRoleEditor    UpdateAdminUserRequestRole = "editor"
	UpdateAdminUserRequestRoleModerator UpdateAdminUserRequestRole = "moderator"
	UpdateAdminUserRequestRoleViewer    UpdateAdminUserRequestRole = "viewer"
)

// Defines values for UpdateAdminUserRequestStatus.
const (
	UpdateAdminUserRequestStatusActive    UpdateAdminUserRequestStatus = "active"
	UpdateAdminUserRequestStatusInactive  UpdateAdminUserRequestStatus = "inactive"
	UpdateAdminUserRequestStatusSuspended UpdateAdminUserRequestStatus = "suspended"
)

// Defines values for UpdateNewsArticleRequestNewsType.
const (
	UpdateNewsArticleRequestNewsTypeAlert        UpdateNewsArticleRequestNewsType = "alert"
	UpdateNewsArticleRequestNewsTypeAnnouncement UpdateNewsArticleRequestNewsType = "announcement"
	UpdateNewsArticleRequestNewsTypeEvent        UpdateNewsArticleRequestNewsType = "event"
	UpdateNewsArticleRequestNewsTypeFeature      UpdateNewsArticleRequestNewsType = "feature"
	UpdateNewsArticleRequestNewsTypePressRelease UpdateNewsArticleRequestNewsType = "press_release"
	UpdateNewsArticleRequestNewsTypeUpdate       UpdateNewsArticleRequestNewsType = "update"
)

// Defines values for UpdateNewsArticleRequestPriorityLevel.
const (
	UpdateNewsArticleRequestPriorityLevelHigh   UpdateNewsArticleRequestPriorityLevel = "high"
	UpdateNewsArticleRequestPriorityLevelLow    UpdateNewsArticleRequestPriorityLevel = "low"
	UpdateNewsArticleRequestPriorityLevelNormal UpdateNewsArticleRequestPriorityLevel = "normal"
	UpdateNewsArticleRequestPriorityLevelUrgent UpdateNewsArticleRequestPriorityLevel = "urgent"
)

// Defines values for UpdateNewsArticleRequestPublishingStatus.
const (
	UpdateNewsArticleRequestPublishingStatusArchived  UpdateNewsArticleRequestPublishingStatus = "archived"
	UpdateNewsArticleRequestPublishingStatusDraft     UpdateNewsArticleRequestPublishingStatus = "draft"
	UpdateNewsArticleRequestPublishingStatusPublished UpdateNewsArticleRequestPublishingStatus = "published"
)

// Defines values for StatusParam.
const (
	StatusParamArchived  StatusParam = "archived"
	StatusParamDraft     StatusParam = "draft"
	StatusParamPublished StatusParam = "published"
)

// Defines values for GetDashboardAnalyticsParamsPeriod.
const (
	GetDashboardAnalyticsParamsPeriodDay     GetDashboardAnalyticsParamsPeriod = "day"
	GetDashboardAnalyticsParamsPeriodMonth   GetDashboardAnalyticsParamsPeriod = "month"
	GetDashboardAnalyticsParamsPeriodQuarter GetDashboardAnalyticsParamsPeriod = "quarter"
	GetDashboardAnalyticsParamsPeriodWeek    GetDashboardAnalyticsParamsPeriod = "week"
	GetDashboardAnalyticsParamsPeriodYear    GetDashboardAnalyticsParamsPeriod = "year"
)

// Defines values for GetEventsAdminParamsStatus.
const (
	GetEventsAdminParamsStatusArchived  GetEventsAdminParamsStatus = "archived"
	GetEventsAdminParamsStatusDraft     GetEventsAdminParamsStatus = "draft"
	GetEventsAdminParamsStatusPublished GetEventsAdminParamsStatus = "published"
)

// Defines values for GetInquiriesParamsInquiryType.
const (
	GetInquiriesParamsInquiryTypeBusiness  GetInquiriesParamsInquiryType = "business"
	GetInquiriesParamsInquiryTypeDonation  GetInquiriesParamsInquiryType = "donation"
	GetInquiriesParamsInquiryTypeMedia     GetInquiriesParamsInquiryType = "media"
	GetInquiriesParamsInquiryTypeVolunteer GetInquiriesParamsInquiryType = "volunteer"
)

// Defines values for GetInquiriesParamsStatus.
const (
	GetInquiriesParamsStatusClosed     GetInquiriesParamsStatus = "closed"
	GetInquiriesParamsStatusCompleted  GetInquiriesParamsStatus = "completed"
	GetInquiriesParamsStatusInProgress GetInquiriesParamsStatus = "in_progress"
	GetInquiriesParamsStatusPending    GetInquiriesParamsStatus = "pending"
)

// Defines values for UpdateInquiryStatusJSONBodyStatus.
const (
	UpdateInquiryStatusJSONBodyStatusClosed     UpdateInquiryStatusJSONBodyStatus = "closed"
	UpdateInquiryStatusJSONBodyStatusCompleted  UpdateInquiryStatusJSONBodyStatus = "completed"
	UpdateInquiryStatusJSONBodyStatusInProgress UpdateInquiryStatusJSONBodyStatus = "in_progress"
	UpdateInquiryStatusJSONBodyStatusPending    UpdateInquiryStatusJSONBodyStatus = "pending"
)

// Defines values for GetNewsAdminParamsStatus.
const (
	GetNewsAdminParamsStatusArchived  GetNewsAdminParamsStatus = "archived"
	GetNewsAdminParamsStatusDraft     GetNewsAdminParamsStatus = "draft"
	GetNewsAdminParamsStatusPublished GetNewsAdminParamsStatus = "published"
)

// Defines values for GetResearchAdminParamsStatus.
const (
	GetResearchAdminParamsStatusArchived  GetResearchAdminParamsStatus = "archived"
	GetResearchAdminParamsStatusDraft     GetResearchAdminParamsStatus = "draft"
	GetResearchAdminParamsStatusPublished GetResearchAdminParamsStatus = "published"
)

// Defines values for GetServicesAdminParamsStatus.
const (
	GetServicesAdminParamsStatusArchived  GetServicesAdminParamsStatus = "archived"
	GetServicesAdminParamsStatusDraft     GetServicesAdminParamsStatus = "draft"
	GetServicesAdminParamsStatusPublished GetServicesAdminParamsStatus = "published"
)

// Defines values for GetAdminUsersParamsRole.
const (
	GetAdminUsersParamsRoleAdmin     GetAdminUsersParamsRole = "admin"
	GetAdminUsersParamsRoleEditor    GetAdminUsersParamsRole = "editor"
	GetAdminUsersParamsRoleModerator GetAdminUsersParamsRole = "moderator"
	GetAdminUsersParamsRoleViewer    GetAdminUsersParamsRole = "viewer"
)

// Defines values for GetAdminUsersParamsStatus.
const (
	GetAdminUsersParamsStatusActive    GetAdminUsersParamsStatus = "active"
	GetAdminUsersParamsStatusInactive  GetAdminUsersParamsStatus = "inactive"
	GetAdminUsersParamsStatusSuspended GetAdminUsersParamsStatus = "suspended"
)

// AdminUser defines model for AdminUser.
type AdminUser struct {
	CreatedBy *openapi_types.UUID `json:"created_by"`
	CreatedOn time.Time           `json:"created_on"`
	Email     openapi_types.Email `json:"email"`
	FirstName string              `json:"first_name"`
	LastLogin *time.Time          `json:"last_login"`
	LastName  string              `json:"last_name"`
	Role      AdminUserRole       `json:"role"`
	Status    AdminUserStatus     `json:"status"`
	UserId    openapi_types.UUID  `json:"user_id"`
}

// AdminUserRole defines model for AdminUser.Role.
type AdminUserRole string

// AdminUserStatus defines model for AdminUser.Status.
type AdminUserStatus string

// CreateAdminUserRequest defines model for CreateAdminUserRequest.
type CreateAdminUserRequest struct {
	Email     openapi_types.Email        `json:"email"`
	FirstName string                     `json:"first_name"`
	LastName  string                     `json:"last_name"`
	Password  string                     `json:"password"`
	Role      CreateAdminUserRequestRole `json:"role"`
}

// CreateAdminUserRequestRole defines model for CreateAdminUserRequest.Role.
type CreateAdminUserRequestRole string

// CreateEventRequest defines model for CreateEventRequest.
type CreateEventRequest struct {
	CategoryId  openapi_types.UUID          `json:"category_id"`
	Description string                      `json:"description"`
	EndDatetime *time.Time                  `json:"end_datetime"`
	EventType   CreateEventRequestEventType `json:"event_type"`
	MaxCapacity *int                        `json:"max_capacity"`
	Organizer   struct {
		Email openapi_types.Email `json:"email"`
		Name  string              `json:"name"`
		Phone *string             `json:"phone"`
	} `json:"organizer"`
	RegistrationRequired bool      `json:"registration_required"`
	StartDatetime        time.Time `json:"start_datetime"`
	Title                string    `json:"title"`
}

// CreateEventRequestEventType defines model for CreateEventRequest.EventType.
type CreateEventRequestEventType string

// CreateNewsArticleRequest defines model for CreateNewsArticleRequest.
type CreateNewsArticleRequest struct {
	AuthorName       *string                                   `json:"author_name"`
	CategoryId       openapi_types.UUID                        `json:"category_id"`
	Content          *string                                   `json:"content"`
	ImageUrl         *string                                   `json:"image_url"`
	NewsType         CreateNewsArticleRequestNewsType          `json:"news_type"`
	PriorityLevel    *CreateNewsArticleRequestPriorityLevel    `json:"priority_level,omitempty"`
	PublishingStatus *CreateNewsArticleRequestPublishingStatus `json:"publishing_status,omitempty"`
	Summary          string                                    `json:"summary"`
	Tags             *[]string                                 `json:"tags,omitempty"`
	Title            string                                    `json:"title"`
}

// CreateNewsArticleRequestNewsType defines model for CreateNewsArticleRequest.NewsType.
type CreateNewsArticleRequestNewsType string

// CreateNewsArticleRequestPriorityLevel defines model for CreateNewsArticleRequest.PriorityLevel.
type CreateNewsArticleRequestPriorityLevel string

// CreateNewsArticleRequestPublishingStatus defines model for CreateNewsArticleRequest.PublishingStatus.
type CreateNewsArticleRequestPublishingStatus string

// CreateNewsCategoryRequest defines model for CreateNewsCategoryRequest.
type CreateNewsCategoryRequest struct {
	Description *string `json:"description"`
	Name        string  `json:"name"`
}

// CreateResearchPublicationRequest defines model for CreateResearchPublicationRequest.
type CreateResearchPublicationRequest struct {
	Abstract string `json:"abstract"`
	Authors  []struct {
		Affiliation *string              `json:"affiliation"`
		Email       *openapi_types.Email `json:"email"`
		Name        string               `json:"name"`
	} `json:"authors"`
	CategoryId   openapi_types.UUID                           `json:"category_id"`
	Keywords     *[]string                                    `json:"keywords,omitempty"`
	ResearchType CreateResearchPublicationRequestResearchType `json:"research_type"`
	StudyStatus  CreateResearchPublicationRequestStudyStatus  `json:"study_status"`
	Title        string                                       `json:"title"`
}

// CreateResearchPublicationRequestResearchType defines model for CreateResearchPublicationRequest.ResearchType.
type CreateResearchPublicationRequestResearchType string

// CreateResearchPublicationRequestStudyStatus defines model for CreateResearchPublicationRequest.StudyStatus.
type CreateResearchPublicationRequestStudyStatus string

// CreateServiceRequest defines model for CreateServiceRequest.
type CreateServiceRequest struct {
	AvailabilityStatus  CreateServiceRequestAvailabilityStatus `json:"availability_status"`
	CategoryId          openapi_types.UUID                     `json:"category_id"`
	Description         string                                 `json:"description"`
	DurationMinutes     *int                                   `json:"duration_minutes"`
	InsuranceAccepted   bool                                   `json:"insurance_accepted"`
	PriceRange          *string                                `json:"price_range"`
	ServiceType         CreateServiceRequestServiceType        `json:"service_type"`
	TelehealthAvailable bool                                   `json:"telehealth_available"`
	Title               string                                 `json:"title"`
}

// CreateServiceRequestAvailabilityStatus defines model for CreateServiceRequest.AvailabilityStatus.
type CreateServiceRequestAvailabilityStatus string

// CreateServiceRequestServiceType defines model for CreateServiceRequest.ServiceType.
type CreateServiceRequestServiceType string

// DashboardAnalytics defines model for DashboardAnalytics.
type DashboardAnalytics struct {
	ContentStats struct {
		PublishedThisMonth *int `json:"published_this_month,omitempty"`
		TotalEvents        *int `json:"total_events,omitempty"`
		TotalNews          *int `json:"total_news,omitempty"`
		TotalResearch      *int `json:"total_research,omitempty"`
		TotalServices      *int `json:"total_services,omitempty"`
	} `json:"content_stats"`
	InquiryStats struct {
		CompletedThisMonth *int `json:"completed_this_month,omitempty"`
		PendingInquiries   *int `json:"pending_inquiries,omitempty"`
		TotalInquiries     *int `json:"total_inquiries,omitempty"`
	} `json:"inquiry_stats"`
	SystemStats struct {
		LastBackup *time.Time `json:"last_backup"`
		Uptime     *string    `json:"uptime,omitempty"`
	} `json:"system_stats"`
	UserStats struct {
		ActiveSessions  *int `json:"active_sessions,omitempty"`
		TotalAdminUsers *int `json:"total_admin_users,omitempty"`
	} `json:"user_stats"`
}

// Event defines model for Event.
type Event struct {
	// Agenda Event agenda
	Agenda *[]struct {
		Description *string `json:"description"`
		EndTime     *string `json:"end_time"`
		Speaker     *string `json:"speaker"`
		StartTime   string  `json:"start_time"`
		Title       string  `json:"title"`
	} `json:"agenda,omitempty"`
	Category *EventCategory `json:"category,omitempty"`

	// CategoryId Event category ID
	CategoryId openapi_types.UUID `json:"category_id"`

	// Cost Event cost information
	Cost *struct {
		Amount      *float32 `json:"amount,omitempty"`
		Currency    *string  `json:"currency,omitempty"`
		Description *string  `json:"description"`
	} `json:"cost"`

	// CreatedBy Event creator
	CreatedBy *string `json:"created_by"`

	// CreatedOn Event creation timestamp
	CreatedOn time.Time `json:"created_on"`

	// CurrentRegistrations Current number of registrations
	CurrentRegistrations int `json:"current_registrations"`

	// Description Event description
	Description string `json:"description"`

	// EndDatetime Event end date and time
	EndDatetime *time.Time `json:"end_datetime"`

	// EventId Unique event identifier
	EventId openapi_types.UUID `json:"event_id"`

	// EventType Type of event
	EventType EventEventType `json:"event_type"`

	// ImageUrl Event image URL
	ImageUrl *string `json:"image_url"`

	// Location Event location details
	Location *struct {
		Address struct {
			City          string  `json:"city"`
			Country       *string `json:"country,omitempty"`
			PostalCode    *string `json:"postal_code,omitempty"`
			State         *string `json:"state,omitempty"`
			StreetAddress *string `json:"street_address,omitempty"`
		} `json:"address"`
		Room                *string `json:"room"`
		SpecialInstructions *string `json:"special_instructions"`
		VenueName           string  `json:"venue_name"`
	} `json:"location"`

	// Materials Event materials
	Materials *[]struct {
		Description *string `json:"description"`
		Title       string  `json:"title"`
		Url         string  `json:"url"`
	} `json:"materials,omitempty"`

	// MaxCapacity Maximum event capacity
	MaxCapacity *int `json:"max_capacity"`

	// ModifiedBy Last modifier
	ModifiedBy *string `json:"modified_by"`

	// ModifiedOn Last modification timestamp
	ModifiedOn *time.Time `json:"modified_on"`

	// Organizer Event organizer information
	Organizer struct {
		Department *string             `json:"department"`
		Email      openapi_types.Email `json:"email"`
		Name       string              `json:"name"`
		Phone      *string             `json:"phone"`
	} `json:"organizer"`

	// Prerequisites Event prerequisites
	Prerequisites *[]string `json:"prerequisites,omitempty"`

	// PublishingStatus Event publishing status
	PublishingStatus EventPublishingStatus `json:"publishing_status"`

	// RegistrationDeadline Registration deadline
	RegistrationDeadline *time.Time `json:"registration_deadline"`

	// RegistrationRequired Whether registration is required
	RegistrationRequired bool `json:"registration_required"`

	// RegistrationStatus Registration status
	RegistrationStatus EventRegistrationStatus `json:"registration_status"`

	// Slug URL-friendly event identifier
	Slug string `json:"slug"`

	// Speakers Event speakers
	Speakers *[]struct {
		Bio      *string `json:"bio"`
		ImageUrl *string `json:"image_url"`
		Name     string  `json:"name"`
		Title    *string `json:"title"`
	} `json:"speakers,omitempty"`

	// StartDatetime Event start date and time
	StartDatetime time.Time `json:"start_datetime"`

	// Tags Event tags
	Tags *[]string `json:"tags,omitempty"`

	// Timezone Event timezone
	Timezone string `json:"timezone"`

	// Title Event title
	Title string `json:"title"`

	// VirtualMeetingInfo Virtual meeting information
	VirtualMeetingInfo *struct {
		DialInNumbers *[]string `json:"dial_in_numbers,omitempty"`
		MeetingId     *string   `json:"meeting_id,omitempty"`
		MeetingUrl    *string   `json:"meeting_url,omitempty"`
		Passcode      *string   `json:"passcode"`
		Platform      *string   `json:"platform,omitempty"`
	} `json:"virtual_meeting_info"`
}

// EventEventType Type of event
type EventEventType string

// EventPublishingStatus Event publishing status
type EventPublishingStatus string

// EventRegistrationStatus Registration status
type EventRegistrationStatus string

// EventCategory defines model for EventCategory.
type EventCategory struct {
	// CategoryId Unique category identifier
	CategoryId openapi_types.UUID `json:"category_id"`

	// Color Category display color (hex)
	Color *string `json:"color"`

	// CreatedBy Category creator
	CreatedBy *string `json:"created_by"`

	// CreatedOn Category creation timestamp
	CreatedOn time.Time `json:"created_on"`

	// Description Category description
	Description *string `json:"description"`

	// Icon Category icon identifier
	Icon *string `json:"icon"`

	// IsDefaultUnassigned Whether this is the default category for unassigned events
	IsDefaultUnassigned bool `json:"is_default_unassigned"`

	// ModifiedBy Last modifier
	ModifiedBy *string `json:"modified_by"`

	// ModifiedOn Last modification timestamp
	ModifiedOn *time.Time `json:"modified_on"`

	// Name Category name
	Name string `json:"name"`

	// Slug URL-friendly category identifier
	Slug string `json:"slug"`
}

// Inquiry defines model for Inquiry.
type Inquiry struct {
	AssignedTo     *openapi_types.UUID `json:"assigned_to"`
	InquiryId      openapi_types.UUID  `json:"inquiry_id"`
	InquiryType    InquiryInquiryType  `json:"inquiry_type"`
	LastUpdated    *time.Time          `json:"last_updated"`
	Message        string              `json:"message"`
	Notes          *string             `json:"notes"`
	Status         InquiryStatus       `json:"status"`
	Subject        string              `json:"subject"`
	SubmittedOn    time.Time           `json:"submitted_on"`
	SubmitterEmail openapi_types.Email `json:"submitter_email"`
	SubmitterName  string              `json:"submitter_name"`
}

// InquiryInquiryType defines model for Inquiry.InquiryType.
type InquiryInquiryType string

// InquiryStatus defines model for Inquiry.Status.
type InquiryStatus string

// NewsArticle defines model for NewsArticle.
type NewsArticle struct {
	// AuthorName Article author name
	AuthorName *string       `json:"author_name"`
	Category   *NewsCategory `json:"category,omitempty"`

	// CategoryId News category ID
	CategoryId openapi_types.UUID `json:"category_id"`

	// Content Full news article content
	Content *string `json:"content"`

	// CreatedBy Article creator
	CreatedBy *string `json:"created_by"`

	// CreatedOn Article creation timestamp
	CreatedOn time.Time `json:"created_on"`

	// ExternalSource External source if applicable
	ExternalSource *string `json:"external_source"`

	// ExternalUrl External URL if applicable
	ExternalUrl *string `json:"external_url"`

	// ImageUrl Article image URL
	ImageUrl *string `json:"image_url"`

	// ModifiedBy Last modifier
	ModifiedBy *string `json:"modified_by"`

	// ModifiedOn Last modification timestamp
	ModifiedOn *time.Time `json:"modified_on"`

	// NewsId Unique news article identifier
	NewsId openapi_types.UUID `json:"news_id"`

	// NewsType Type of news article
	NewsType NewsArticleNewsType `json:"news_type"`

	// PriorityLevel Article priority level
	PriorityLevel NewsArticlePriorityLevel `json:"priority_level"`

	// PublicationTimestamp Article publication timestamp
	PublicationTimestamp time.Time `json:"publication_timestamp"`

	// PublishingStatus Article publishing status
	PublishingStatus NewsArticlePublishingStatus `json:"publishing_status"`

	// Slug URL-friendly article identifier
	Slug string `json:"slug"`

	// Summary News article summary
	Summary string `json:"summary"`

	// Tags Article tags
	Tags *[]string `json:"tags,omitempty"`

	// Title News article title
	Title string `json:"title"`
}

// NewsArticleNewsType Type of news article
type NewsArticleNewsType string

// NewsArticlePriorityLevel Article priority level
type NewsArticlePriorityLevel string

// NewsArticlePublishingStatus Article publishing status
type NewsArticlePublishingStatus string

// NewsCategory defines model for NewsCategory.
type NewsCategory struct {
	// CategoryId Unique category identifier
	CategoryId openapi_types.UUID `json:"category_id"`

	// CreatedBy Category creator
	CreatedBy *string `json:"created_by"`

	// CreatedOn Category creation timestamp
	CreatedOn time.Time `json:"created_on"`

	// Description Category description
	Description *string `json:"description"`

	// IsDefaultUnassigned Whether this is the default category for unassigned articles
	IsDefaultUnassigned bool `json:"is_default_unassigned"`

	// ModifiedBy Last modifier
	ModifiedBy *string `json:"modified_by"`

	// ModifiedOn Last modification timestamp
	ModifiedOn *time.Time `json:"modified_on"`

	// Name Category name
	Name string `json:"name"`

	// Slug URL-friendly category identifier
	Slug string `json:"slug"`
}

// PaginationInfo defines model for PaginationInfo.
type PaginationInfo struct {
	CurrentPage  int  `json:"current_page"`
	HasNext      bool `json:"has_next"`
	HasPrevious  bool `json:"has_previous"`
	ItemsPerPage int  `json:"items_per_page"`
	TotalItems   int  `json:"total_items"`
	TotalPages   int  `json:"total_pages"`
}

// ResearchCategory defines model for ResearchCategory.
type ResearchCategory struct {
	// CategoryId Unique category identifier
	CategoryId openapi_types.UUID `json:"category_id"`

	// CreatedBy Category creator
	CreatedBy *string `json:"created_by"`

	// CreatedOn Category creation timestamp
	CreatedOn time.Time `json:"created_on"`

	// Description Category description
	Description *string `json:"description"`

	// IsDefaultUnassigned Whether this is the default category for unassigned publications
	IsDefaultUnassigned bool `json:"is_default_unassigned"`

	// ModifiedBy Last modifier
	ModifiedBy *string `json:"modified_by"`

	// ModifiedOn Last modification timestamp
	ModifiedOn *time.Time `json:"modified_on"`

	// Name Category name
	Name string `json:"name"`

	// ResearchFocusArea Primary research focus area
	ResearchFocusArea *string `json:"research_focus_area"`

	// Slug URL-friendly category identifier
	Slug string `json:"slug"`
}

// ResearchPublication defines model for ResearchPublication.
type ResearchPublication struct {
	// Abstract Research abstract or summary
	Abstract string `json:"abstract"`

	// Authors Research authors
	Authors []struct {
		Affiliation *string              `json:"affiliation"`
		Email       *openapi_types.Email `json:"email"`
		Name        string               `json:"name"`
	} `json:"authors"`
	Category *ResearchCategory `json:"category,omitempty"`

	// CategoryId Research category ID
	CategoryId openapi_types.UUID `json:"category_id"`

	// CitationCount Number of citations
	CitationCount int `json:"citation_count"`

	// CreatedBy Publication creator
	CreatedBy *string `json:"created_by"`

	// CreatedOn Publication creation timestamp
	CreatedOn time.Time `json:"created_on"`

	// Doi Digital Object Identifier
	Doi *string `json:"doi"`

	// DownloadCount Number of downloads
	DownloadCount int `json:"download_count"`

	// EthicalApproval Ethical approval information
	EthicalApproval *struct {
		ApprovalDate   *openapi_types.Date `json:"approval_date,omitempty"`
		ApprovalNumber *string             `json:"approval_number,omitempty"`
		CommitteeName  *string             `json:"committee_name,omitempty"`
	} `json:"ethical_approval"`

	// ExternalUrl External publication URL
	ExternalUrl *string `json:"external_url"`

	// FullContent Full research content
	FullContent *string `json:"full_content"`

	// FundingSources Research funding sources
	FundingSources *[]string `json:"funding_sources,omitempty"`

	// Isbn ISBN for books
	Isbn *string `json:"isbn"`

	// JournalName Journal or publication venue
	JournalName *string `json:"journal_name"`

	// Keywords Research keywords
	Keywords *[]string `json:"keywords,omitempty"`

	// ModifiedBy Last modifier
	ModifiedBy *string `json:"modified_by"`

	// ModifiedOn Last modification timestamp
	ModifiedOn *time.Time `json:"modified_on"`

	// PdfUrl PDF file URL
	PdfUrl *string `json:"pdf_url"`

	// PublicationDate Publication date
	PublicationDate openapi_types.Date `json:"publication_date"`

	// PublishingStatus Publication status
	PublishingStatus ResearchPublicationPublishingStatus `json:"publishing_status"`

	// ResearchId Unique research publication identifier
	ResearchId openapi_types.UUID `json:"research_id"`

	// ResearchType Type of research publication
	ResearchType ResearchPublicationResearchType `json:"research_type"`

	// Slug URL-friendly publication identifier
	Slug string `json:"slug"`

	// StudyStatus Research study status
	StudyStatus ResearchPublicationStudyStatus `json:"study_status"`

	// Title Research publication title
	Title string `json:"title"`
}

// ResearchPublicationPublishingStatus Publication status
type ResearchPublicationPublishingStatus string

// ResearchPublicationResearchType Type of research publication
type ResearchPublicationResearchType string

// ResearchPublicationStudyStatus Research study status
type ResearchPublicationStudyStatus string

// Service defines model for Service.
type Service struct {
	// AvailabilityStatus Current availability status
	AvailabilityStatus ServiceAvailabilityStatus `json:"availability_status"`
	Category           *ServiceCategory          `json:"category,omitempty"`

	// CategoryId Service category ID
	CategoryId openapi_types.UUID `json:"category_id"`

	// ContactInfo Service-specific contact information
	ContactInfo *struct {
		Email     *openapi_types.Email `json:"email,omitempty"`
		Extension *string              `json:"extension,omitempty"`
		Phone     *string              `json:"phone,omitempty"`
	} `json:"contact_info"`

	// CreatedOn Service creation timestamp
	CreatedOn time.Time `json:"created_on"`

	// Description Service description
	Description string `json:"description"`

	// DurationMinutes Typical service duration in minutes
	DurationMinutes *int `json:"duration_minutes"`

	// ImageUrl Service image URL
	ImageUrl *string `json:"image_url"`

	// InsuranceAccepted Whether insurance is accepted
	InsuranceAccepted bool `json:"insurance_accepted"`

	// LocationDetails Location details for service delivery
	LocationDetails *struct {
		Building            *string `json:"building,omitempty"`
		Floor               *string `json:"floor,omitempty"`
		Room                *string `json:"room,omitempty"`
		SpecialInstructions *string `json:"special_instructions,omitempty"`
	} `json:"location_details"`

	// ModifiedOn Last modification timestamp
	ModifiedOn *time.Time `json:"modified_on"`

	// Prerequisites Service prerequisites or requirements
	Prerequisites *[]string `json:"prerequisites,omitempty"`

	// PriceRange Price range information
	PriceRange *string `json:"price_range"`

	// PublishingStatus Service publishing status
	PublishingStatus ServicePublishingStatus `json:"publishing_status"`

	// ServiceId Unique service identifier
	ServiceId openapi_types.UUID `json:"service_id"`

	// ServiceType Type of service offered
	ServiceType ServiceServiceType `json:"service_type"`

	// Slug URL-friendly service identifier
	Slug string `json:"slug"`

	// TargetConditions Medical conditions this service addresses
	TargetConditions *[]string `json:"target_conditions,omitempty"`

	// TelehealthAvailable Whether telehealth option is available
	TelehealthAvailable bool `json:"telehealth_available"`

	// Title Service title
	Title string `json:"title"`
}

// ServiceAvailabilityStatus Current availability status
type ServiceAvailabilityStatus string

// ServicePublishingStatus Service publishing status
type ServicePublishingStatus string

// ServiceServiceType Type of service offered
type ServiceServiceType string

// ServiceCategory defines model for ServiceCategory.
type ServiceCategory struct {
	// CategoryId Unique category identifier
	CategoryId openapi_types.UUID `json:"category_id"`

	// CreatedOn Category creation timestamp
	CreatedOn time.Time `json:"created_on"`

	// Description Category description
	Description *string `json:"description"`

	// Icon Category icon identifier
	Icon *string `json:"icon"`

	// IsDefaultUnassigned Whether this is the default category for unassigned services
	IsDefaultUnassigned bool `json:"is_default_unassigned"`

	// ModifiedOn Last modification timestamp
	ModifiedOn *time.Time `json:"modified_on"`

	// Name Category name
	Name string `json:"name"`

	// Slug URL-friendly category identifier
	Slug string `json:"slug"`

	// SortOrder Display sort order
	SortOrder int `json:"sort_order"`
}

// SystemSettings defines model for SystemSettings.
type SystemSettings struct {
	NotificationSettings struct {
		EmailNotifications *bool `json:"email_notifications,omitempty"`
		SlackNotifications *bool `json:"slack_notifications,omitempty"`
		SmsNotifications   *bool `json:"sms_notifications,omitempty"`
	} `json:"notification_settings"`
	SecuritySettings struct {
		MaxLoginAttempts      *int `json:"max_login_attempts,omitempty"`
		PasswordExpiryDays    *int `json:"password_expiry_days,omitempty"`
		SessionTimeoutMinutes *int `json:"session_timeout_minutes,omitempty"`
	} `json:"security_settings"`
	SiteSettings struct {
		ContactEmail    *openapi_types.Email `json:"contact_email,omitempty"`
		MaintenanceMode *bool                `json:"maintenance_mode,omitempty"`
		SiteDescription *string              `json:"site_description,omitempty"`
		SiteName        *string              `json:"site_name,omitempty"`
	} `json:"site_settings"`
}

// UpdateAdminUserRequest defines model for UpdateAdminUserRequest.
type UpdateAdminUserRequest struct {
	FirstName *string                       `json:"first_name,omitempty"`
	LastName  *string                       `json:"last_name,omitempty"`
	Role      *UpdateAdminUserRequestRole   `json:"role,omitempty"`
	Status    *UpdateAdminUserRequestStatus `json:"status,omitempty"`
}

// UpdateAdminUserRequestRole defines model for UpdateAdminUserRequest.Role.
type UpdateAdminUserRequestRole string

// UpdateAdminUserRequestStatus defines model for UpdateAdminUserRequest.Status.
type UpdateAdminUserRequestStatus string

// UpdateNewsArticleRequest defines model for UpdateNewsArticleRequest.
type UpdateNewsArticleRequest struct {
	AuthorName       *string                                   `json:"author_name"`
	CategoryId       *openapi_types.UUID                       `json:"category_id,omitempty"`
	Content          *string                                   `json:"content"`
	ImageUrl         *string                                   `json:"image_url"`
	NewsType         *UpdateNewsArticleRequestNewsType         `json:"news_type,omitempty"`
	PriorityLevel    *UpdateNewsArticleRequestPriorityLevel    `json:"priority_level,omitempty"`
	PublishingStatus *UpdateNewsArticleRequestPublishingStatus `json:"publishing_status,omitempty"`
	Summary          *string                                   `json:"summary,omitempty"`
	Tags             *[]string                                 `json:"tags,omitempty"`
	Title            *string                                   `json:"title,omitempty"`
}

// UpdateNewsArticleRequestNewsType defines model for UpdateNewsArticleRequest.NewsType.
type UpdateNewsArticleRequestNewsType string

// UpdateNewsArticleRequestPriorityLevel defines model for UpdateNewsArticleRequest.PriorityLevel.
type UpdateNewsArticleRequestPriorityLevel string

// UpdateNewsArticleRequestPublishingStatus defines model for UpdateNewsArticleRequest.PublishingStatus.
type UpdateNewsArticleRequestPublishingStatus string

// UpdateSystemSettingsRequest defines model for UpdateSystemSettingsRequest.
type UpdateSystemSettingsRequest struct {
	NotificationSettings *struct {
		EmailNotifications *bool `json:"email_notifications,omitempty"`
		SlackNotifications *bool `json:"slack_notifications,omitempty"`
		SmsNotifications   *bool `json:"sms_notifications,omitempty"`
	} `json:"notification_settings,omitempty"`
	SecuritySettings *struct {
		MaxLoginAttempts      *int `json:"max_login_attempts,omitempty"`
		PasswordExpiryDays    *int `json:"password_expiry_days,omitempty"`
		SessionTimeoutMinutes *int `json:"session_timeout_minutes,omitempty"`
	} `json:"security_settings,omitempty"`
	SiteSettings *struct {
		ContactEmail    *openapi_types.Email `json:"contact_email,omitempty"`
		MaintenanceMode *bool                `json:"maintenance_mode,omitempty"`
		SiteDescription *string              `json:"site_description,omitempty"`
		SiteName        *string              `json:"site_name,omitempty"`
	} `json:"site_settings,omitempty"`
}

// CategoryIdParam defines model for CategoryIdParam.
type CategoryIdParam = openapi_types.UUID

// LimitParam defines model for LimitParam.
type LimitParam = int

// PageParam defines model for PageParam.
type PageParam = int

// SearchParam defines model for SearchParam.
type SearchParam = string

// StatusParam defines model for StatusParam.
type StatusParam string

// CreatedResponse defines model for CreatedResponse.
type CreatedResponse struct {
	// CorrelationId Request correlation ID for tracking
	CorrelationId openapi_types.UUID `json:"correlation_id"`

	// Data Created resource data
	Data    map[string]interface{} `json:"data"`
	Message string                 `json:"message"`
	Success bool                   `json:"success"`

	// Timestamp Response timestamp
	Timestamp time.Time `json:"timestamp"`
}

// DeletedResponse defines model for DeletedResponse.
type DeletedResponse struct {
	// CorrelationId Request correlation ID for tracking
	CorrelationId openapi_types.UUID `json:"correlation_id"`
	Message       string             `json:"message"`
	Success       bool               `json:"success"`

	// Timestamp Response timestamp
	Timestamp time.Time `json:"timestamp"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Error struct {
		// Code Error code identifier
		Code string `json:"code"`

		// CorrelationId Request correlation ID for tracking
		CorrelationId openapi_types.UUID `json:"correlation_id"`

		// Details Additional error details
		Details *map[string]interface{} `json:"details"`

		// Message Human-readable error message
		Message string `json:"message"`

		// Timestamp Error timestamp
		Timestamp time.Time `json:"timestamp"`
	} `json:"error"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	Checks struct {
		Dapr *struct {
			Error          *string                         `json:"error"`
			ResponseTimeMs *float32                        `json:"response_time_ms,omitempty"`
			Status         *HealthResponseChecksDaprStatus `json:"status,omitempty"`
		} `json:"dapr,omitempty"`
		Database *struct {
			Error          *string                             `json:"error"`
			ResponseTimeMs *float32                            `json:"response_time_ms,omitempty"`
			Status         *HealthResponseChecksDatabaseStatus `json:"status,omitempty"`
		} `json:"database,omitempty"`
		Vault *struct {
			Error          *string                          `json:"error"`
			ResponseTimeMs *float32                         `json:"response_time_ms,omitempty"`
			Status         *HealthResponseChecksVaultStatus `json:"status,omitempty"`
		} `json:"vault,omitempty"`
	} `json:"checks"`
	Status    HealthResponseStatus `json:"status"`
	Timestamp time.Time            `json:"timestamp"`
	Version   string               `json:"version"`
}

// SuccessResponse defines model for SuccessResponse.
type SuccessResponse struct {
	// CorrelationId Request correlation ID for tracking
	CorrelationId openapi_types.UUID `json:"correlation_id"`

	// Message Success message
	Message string `json:"message"`
	Success bool   `json:"success"`

	// Timestamp Response timestamp
	Timestamp time.Time `json:"timestamp"`
}

// UpdatedResponse defines model for UpdatedResponse.
type UpdatedResponse struct {
	// CorrelationId Request correlation ID for tracking
	CorrelationId openapi_types.UUID `json:"correlation_id"`

	// Data Updated resource data
	Data    map[string]interface{} `json:"data"`
	Message string                 `json:"message"`
	Success bool                   `json:"success"`

	// Timestamp Response timestamp
	Timestamp time.Time `json:"timestamp"`
}

// GetDashboardAnalyticsParams defines parameters for GetDashboardAnalytics.
type GetDashboardAnalyticsParams struct {
	Period *GetDashboardAnalyticsParamsPeriod `form:"period,omitempty" json:"period,omitempty"`
}

// GetDashboardAnalyticsParamsPeriod defines parameters for GetDashboardAnalytics.
type GetDashboardAnalyticsParamsPeriod string

// AdminLoginJSONBody defines parameters for AdminLogin.
type AdminLoginJSONBody struct {
	Email      openapi_types.Email `json:"email"`
	Password   string              `json:"password"`
	RememberMe *bool               `json:"remember_me,omitempty"`
}

// RefreshTokenJSONBody defines parameters for RefreshToken.
type RefreshTokenJSONBody struct {
	RefreshToken string `json:"refresh_token"`
}

// GetEventsAdminParams defines parameters for GetEventsAdmin.
type GetEventsAdminParams struct {
	// Page Page number for pagination (1-based)
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// Limit Number of items per page
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Search Search query string for full-text search
	Search *SearchParam `form:"search,omitempty" json:"search,omitempty"`

	// Status Filter by publishing status
	Status *GetEventsAdminParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// CategoryId Filter by category ID
	CategoryId *CategoryIdParam `form:"category_id,omitempty" json:"category_id,omitempty"`
}

// GetEventsAdminParamsStatus defines parameters for GetEventsAdmin.
type GetEventsAdminParamsStatus string

// GetInquiriesParams defines parameters for GetInquiries.
type GetInquiriesParams struct {
	// Page Page number for pagination (1-based)
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// Limit Number of items per page
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Search Search query string for full-text search
	Search      *SearchParam                   `form:"search,omitempty" json:"search,omitempty"`
	InquiryType *GetInquiriesParamsInquiryType `form:"inquiry_type,omitempty" json:"inquiry_type,omitempty"`
	Status      *GetInquiriesParamsStatus      `form:"status,omitempty" json:"status,omitempty"`
}

// GetInquiriesParamsInquiryType defines parameters for GetInquiries.
type GetInquiriesParamsInquiryType string

// GetInquiriesParamsStatus defines parameters for GetInquiries.
type GetInquiriesParamsStatus string

// UpdateInquiryStatusJSONBody defines parameters for UpdateInquiryStatus.
type UpdateInquiryStatusJSONBody struct {
	AssignedTo *openapi_types.UUID               `json:"assigned_to"`
	Notes      *string                           `json:"notes"`
	Status     UpdateInquiryStatusJSONBodyStatus `json:"status"`
}

// UpdateInquiryStatusJSONBodyStatus defines parameters for UpdateInquiryStatus.
type UpdateInquiryStatusJSONBodyStatus string

// GetNewsAdminParams defines parameters for GetNewsAdmin.
type GetNewsAdminParams struct {
	// Page Page number for pagination (1-based)
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// Limit Number of items per page
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Search Search query string for full-text search
	Search *SearchParam `form:"search,omitempty" json:"search,omitempty"`

	// Status Filter by publishing status
	Status *GetNewsAdminParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// CategoryId Filter by category ID
	CategoryId *CategoryIdParam `form:"category_id,omitempty" json:"category_id,omitempty"`
}

// GetNewsAdminParamsStatus defines parameters for GetNewsAdmin.
type GetNewsAdminParamsStatus string

// GetResearchAdminParams defines parameters for GetResearchAdmin.
type GetResearchAdminParams struct {
	// Page Page number for pagination (1-based)
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// Limit Number of items per page
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Search Search query string for full-text search
	Search *SearchParam `form:"search,omitempty" json:"search,omitempty"`

	// Status Filter by publishing status
	Status *GetResearchAdminParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// CategoryId Filter by category ID
	CategoryId *CategoryIdParam `form:"category_id,omitempty" json:"category_id,omitempty"`
}

// GetResearchAdminParamsStatus defines parameters for GetResearchAdmin.
type GetResearchAdminParamsStatus string

// GetServicesAdminParams defines parameters for GetServicesAdmin.
type GetServicesAdminParams struct {
	// Page Page number for pagination (1-based)
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// Limit Number of items per page
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Search Search query string for full-text search
	Search *SearchParam `form:"search,omitempty" json:"search,omitempty"`

	// Status Filter by publishing status
	Status *GetServicesAdminParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// CategoryId Filter by category ID
	CategoryId *CategoryIdParam `form:"category_id,omitempty" json:"category_id,omitempty"`
}

// GetServicesAdminParamsStatus defines parameters for GetServicesAdmin.
type GetServicesAdminParamsStatus string

// GetAdminUsersParams defines parameters for GetAdminUsers.
type GetAdminUsersParams struct {
	// Page Page number for pagination (1-based)
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// Limit Number of items per page
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Search Search query string for full-text search
	Search *SearchParam               `form:"search,omitempty" json:"search,omitempty"`
	Role   *GetAdminUsersParamsRole   `form:"role,omitempty" json:"role,omitempty"`
	Status *GetAdminUsersParamsStatus `form:"status,omitempty" json:"status,omitempty"`
}

// GetAdminUsersParamsRole defines parameters for GetAdminUsers.
type GetAdminUsersParamsRole string

// GetAdminUsersParamsStatus defines parameters for GetAdminUsers.
type GetAdminUsersParamsStatus string

// Health response status types (missing from generated code)
type HealthResponseStatus string
type HealthResponseChecksDaprStatus string
type HealthResponseChecksDatabaseStatus string 
type HealthResponseChecksVaultStatus string

// Health status constants
const (
	HealthResponseStatusHealthy   HealthResponseStatus = "healthy"
	HealthResponseStatusUnhealthy HealthResponseStatus = "unhealthy"
	
	HealthResponseChecksDaprStatusUp   HealthResponseChecksDaprStatus = "up"
	HealthResponseChecksDaprStatusDown HealthResponseChecksDaprStatus = "down"
	
	HealthResponseChecksDatabaseStatusUp   HealthResponseChecksDatabaseStatus = "up"
	HealthResponseChecksDatabaseStatusDown HealthResponseChecksDatabaseStatus = "down"
	
	HealthResponseChecksVaultStatusUp   HealthResponseChecksVaultStatus = "up"
	HealthResponseChecksVaultStatusDown HealthResponseChecksVaultStatus = "down"
)

// AdminLoginJSONRequestBody defines body for AdminLogin for application/json ContentType.
type AdminLoginJSONRequestBody AdminLoginJSONBody

// RefreshTokenJSONRequestBody defines body for RefreshToken for application/json ContentType.
type RefreshTokenJSONRequestBody RefreshTokenJSONBody

// CreateEventJSONRequestBody defines body for CreateEvent for application/json ContentType.
type CreateEventJSONRequestBody = CreateEventRequest

// UpdateInquiryStatusJSONRequestBody defines body for UpdateInquiryStatus for application/json ContentType.
type UpdateInquiryStatusJSONRequestBody UpdateInquiryStatusJSONBody

// CreateNewsArticleJSONRequestBody defines body for CreateNewsArticle for application/json ContentType.
type CreateNewsArticleJSONRequestBody = CreateNewsArticleRequest

// CreateNewsCategoryJSONRequestBody defines body for CreateNewsCategory for application/json ContentType.
type CreateNewsCategoryJSONRequestBody = CreateNewsCategoryRequest

// UpdateNewsArticleJSONRequestBody defines body for UpdateNewsArticle for application/json ContentType.
type UpdateNewsArticleJSONRequestBody = UpdateNewsArticleRequest

// CreateResearchPublicationJSONRequestBody defines body for CreateResearchPublication for application/json ContentType.
type CreateResearchPublicationJSONRequestBody = CreateResearchPublicationRequest

// CreateServiceJSONRequestBody defines body for CreateService for application/json ContentType.
type CreateServiceJSONRequestBody = CreateServiceRequest

// UpdateSystemSettingsJSONRequestBody defines body for UpdateSystemSettings for application/json ContentType.
type UpdateSystemSettingsJSONRequestBody = UpdateSystemSettingsRequest

// CreateAdminUserJSONRequestBody defines body for CreateAdminUser for application/json ContentType.
type CreateAdminUserJSONRequestBody = CreateAdminUserRequest

// UpdateAdminUserJSONRequestBody defines body for UpdateAdminUser for application/json ContentType.
type UpdateAdminUserJSONRequestBody = UpdateAdminUserRequest
