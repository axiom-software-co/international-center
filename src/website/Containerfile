# International Center Website - Cross-platform container build for cloud deployment
# Compatible with Podman/Docker on Linux, Windows, macOS

# Build arguments for cross-platform support
ARG TARGETOS=linux
ARG TARGETARCH=amd64
ARG NODE_VERSION=20

# Multi-stage build for optimal image size and security
FROM --platform=$BUILDPLATFORM node:${NODE_VERSION}-bookworm-slim AS base

# Install system dependencies and create non-root user
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    wget \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd --gid 1001 --system nodejs \
    && useradd --uid 1001 --system --gid nodejs --create-home --shell /bin/bash nodejs

# Set pnpm environment for cross-platform compatibility
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV COREPACK_ENABLE_DOWNLOAD_PROMPT=0

# Enable corepack and configure pnpm
RUN corepack enable && \
    corepack prepare pnpm@latest --activate

# Dependencies stage
FROM base AS deps

WORKDIR /app

# Copy package files with proper ownership
COPY --chown=nodejs:nodejs package.json pnpm-lock.yaml ./

# Install dependencies with cache mount for faster cross-platform builds
RUN --mount=type=cache,id=pnpm,target=/pnpm/store,uid=1001,gid=1001 \
    --mount=type=cache,id=pnpm-metadata,target=/app/.pnpm,uid=1001,gid=1001 \
    pnpm install --frozen-lockfile --prefer-offline

# Build stage
FROM base AS builder

WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --chown=nodejs:nodejs package.json pnpm-lock.yaml ./

# Copy source code
COPY --chown=nodejs:nodejs . .

# Set build environment for Astro cross-platform optimization
ENV NODE_ENV=development
ENV ASTRO_TELEMETRY_DISABLED=1
ENV NODE_OPTIONS="--max-old-space-size=2048"

# Switch to non-root user for security
USER nodejs

# Build the application (optional - for production builds)
# RUN pnpm run build

# Runtime stage
FROM --platform=$TARGETPLATFORM node:${NODE_VERSION}-bookworm-slim AS runtime

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    wget \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd --gid 1001 --system nodejs \
    && useradd --uid 1001 --system --gid nodejs --create-home --shell /bin/bash nodejs

# Add labels for better container management
LABEL org.opencontainers.image.title="International Center Website"
LABEL org.opencontainers.image.description="Astro-based website for International Center"
LABEL org.opencontainers.image.vendor="International Center"
LABEL org.opencontainers.image.version="1.0.0"

# Set pnpm environment
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV COREPACK_ENABLE_DOWNLOAD_PROMPT=0

# Enable corepack
RUN corepack enable && \
    corepack prepare pnpm@latest --activate

WORKDIR /app

# Copy application with proper ownership
COPY --from=builder --chown=nodejs:nodejs /app ./

# Set runtime environment variables
ENV NODE_ENV=development
ENV HOST=0.0.0.0
ENV PORT=4321
ENV ASTRO_TELEMETRY_DISABLED=1
ENV NODE_OPTIONS="--max-old-space-size=2048"

# Switch to non-root user for security
USER nodejs

# Expose port
EXPOSE 4321

# Health check handled by podman-compose for better cross-platform compatibility

# Run development server optimized for container environments
CMD ["pnpm", "run", "dev"]